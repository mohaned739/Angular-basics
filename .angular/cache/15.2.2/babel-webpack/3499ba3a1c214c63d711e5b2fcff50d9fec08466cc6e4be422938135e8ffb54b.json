{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../server/server.component\";\nfunction ServersComponent_p_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Server was created, server name is \", ctx_r0.serverName, \"\");\n  }\n}\nfunction ServersComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"No server was created!\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ServersComponent {\n  constructor() {\n    this.allowNewServer = false;\n    this.serverCreationStatus = 'No server was created!';\n    this.serverName = '';\n    this.serverCreated = false;\n    this.servers = ['TestServer', 'TestServer 2'];\n    //setTimeOut Method is used to call a method after specific time\n    setTimeout(() => {\n      this.allowNewServer = true;\n    }, 2000);\n  }\n  onCreateServer() {\n    this.serverCreated = true;\n    this.servers.push(this.serverName);\n    this.serverCreationStatus = 'Server was created!';\n  }\n}\nServersComponent.ɵfac = function ServersComponent_Factory(t) {\n  return new (t || ServersComponent)();\n};\nServersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ServersComponent,\n  selectors: [[\"app-servers\"]],\n  decls: 8,\n  vars: 4,\n  consts: [[\"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [4, \"ngIf\", \"ngIfElse\"], [\"noServer\", \"\"]],\n  template: function ServersComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"input\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function ServersComponent_Template_input_ngModelChange_0_listener($event) {\n        return ctx.serverName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ServersComponent_Template_button_click_1_listener() {\n        return ctx.onCreateServer();\n      });\n      i0.ɵɵtext(2, \" Add Server\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, ServersComponent_p_3_Template, 2, 1, \"p\", 2);\n      i0.ɵɵtemplate(4, ServersComponent_ng_template_4_Template, 2, 0, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelement(6, \"app-server\")(7, \"app-server\");\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.serverName);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.allowNewServer);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.serverCreated)(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [i1.NgIf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i3.ServerComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAMAA,yBAAwC;IAAAA,YAAiD;IAAAA,iBAAI;;;;IAArDA,eAAiD;IAAjDA,mFAAiD;;;;;IAErFA,yBAAG;IAAAA,sCAAsB;IAAAA,iBAAI;;;ACDjC,OAAM,MAAOC,gBAAgB;EAM3BC;IALA,mBAAc,GAAG,KAAK;IACtB,yBAAoB,GAAE,wBAAwB;IAC9C,eAAU,GAAG,EAAE;IACf,kBAAa,GAAG,KAAK;IACrB,YAAO,GAAG,CAAC,YAAY,EAAE,cAAc,CAAC;IAEtC;IACAC,UAAU,CAAC,MAAI;MACb,IAAI,CAACC,cAAc,GAAG,IAAI;IAC5B,CAAC,EAAC,IAAI,CAAC;EACT;EAEAC,cAAc;IACZ,IAAI,CAACC,aAAa,GAAG,IAAI;IACzB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,IAAI,CAACC,UAAU,CAAC;IAClC,IAAI,CAACC,oBAAoB,GAAG,qBAAqB;EACnD;;AAjBWT,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDP7Bf,gCAAmE;MAA3BA;QAAA;MAAA,EAA0B;MAAlEA,iBAAmE;MACnEA,iCAAwF;MAAhFA;QAAA,OAASgB,oBAAgB;MAAA,EAAC;MAC9BhB,6BACJ;MAAAA,iBAAS;MAGTA,6DAA6F;MAC7FA,kHAEc;MACdA,6BAAyB;;;;MAVeA,wCAA0B;MACPA,eAA4B;MAA5BA,8CAA4B;MAKnFA,eAAqB;MAArBA,wCAAqB","names":["i0","ServersComponent","constructor","setTimeout","allowNewServer","onCreateServer","serverCreated","servers","push","serverName","serverCreationStatus","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\a845758\\source\\repos\\Learning Angular\\learning-angular\\src\\app\\servers\\servers.component.html","C:\\Users\\a845758\\source\\repos\\Learning Angular\\learning-angular\\src\\app\\servers\\servers.component.ts"],"sourcesContent":["<input type=\"text\" class=\"form-control\" [(ngModel)] = \"serverName\">\n<button (click)=\"onCreateServer()\" class=\"btn btn-primary\" [disabled]=\"!allowNewServer\">\n    Add Server\n</button>\n<!-- <p [innerText]=\"allowNewServer\"></p> -->\n<!-- <P>{{ serverCreationStatus}}</P> -->\n<p *ngIf=\"serverCreated; else noServer\">Server was created, server name is {{serverName}}</p>\n<ng-template #noServer>\n    <p>No server was created!</p>\n</ng-template>\n<app-server></app-server>\n<app-server></app-server>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-servers',\n  templateUrl: './servers.component.html',\n  styleUrls: ['./servers.component.css']\n})\nexport class ServersComponent {\n  allowNewServer = false;\n  serverCreationStatus= 'No server was created!';\n  serverName = '';\n  serverCreated = false;\n  servers = ['TestServer', 'TestServer 2'];\n  constructor() {\n    //setTimeOut Method is used to call a method after specific time\n    setTimeout(()=>{\n      this.allowNewServer = true;\n    },2000)\n  }\n\n  onCreateServer(){\n    this.serverCreated = true;\n    this.servers.push(this.serverName);\n    this.serverCreationStatus = 'Server was created!';\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}